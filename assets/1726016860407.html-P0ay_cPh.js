import { _ as _export_sfc, o as openBlock, c as createElementBlock, b as createStaticVNode } from "./app-C6L_rV1c.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<p><code>rename.dart</code></p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token comment">// ignore_for_file: avoid_print</span>\n\n<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:developer&#39;</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:io&#39;</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:pubspec_yaml/pubspec_yaml.dart&#39;</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 读取 pubspec.yaml 文件</span>\n  <span class="token keyword">final</span> pubspec <span class="token operator">=</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;pubspec.yaml&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">readAsStringSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPubspecYaml</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// 获取当前的包名</span>\n  <span class="token keyword">var</span> currentName <span class="token operator">=</span> pubspec<span class="token punctuation">.</span>name<span class="token punctuation">;</span>\n  <span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;当前包名: </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">currentName</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// 提示用户输入新的包名</span>\n  stdout<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;请输入新的包名: &#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">var</span> changeName <span class="token operator">=</span> stdin<span class="token punctuation">.</span><span class="token function">readLineSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">var</span> dir <span class="token operator">=</span> <span class="token class-name">Directory</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;lib&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>dir<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">processDirectory</span><span class="token punctuation">(</span>\n      dir<span class="token punctuation">:</span> dir<span class="token punctuation">,</span>\n      currentName<span class="token punctuation">:</span> currentName<span class="token punctuation">,</span>\n      changeName<span class="token punctuation">:</span> changeName<span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">changePubspecName</span><span class="token punctuation">(</span>pubspec<span class="token punctuation">,</span> changeName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;修改完成&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;lib 目录不存在&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 递归处理 lib 及其子目录下的所有.dart 文件</span>\n<span class="token keyword">void</span> <span class="token function">processDirectory</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  required <span class="token class-name">Directory</span> dir<span class="token punctuation">,</span>\n  required <span class="token class-name">String</span> currentName<span class="token punctuation">,</span>\n  <span class="token class-name">String</span><span class="token operator">?</span> changeName<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">var</span> dartFiles <span class="token operator">=</span> dir\n      <span class="token punctuation">.</span><span class="token function">listSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span>whereType<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> file<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;.dart&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> file <span class="token keyword">in</span> dartFiles<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> content <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">readAsStringSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;package:</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">currentName</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">var</span> newContent <span class="token operator">=</span>\n          content<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;package:</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">currentName</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;package:</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">changeName</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      file<span class="token punctuation">.</span><span class="token function">writeAsStringSync</span><span class="token punctuation">(</span>newContent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;修改文件: </span><span class="token interpolation"><span class="token punctuation">${</span><span class="token expression">file<span class="token punctuation">.</span>path</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">var</span> subDirectories <span class="token operator">=</span> dir<span class="token punctuation">.</span><span class="token function">listSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>whereType<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Directory</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> subDir <span class="token keyword">in</span> subDirectories<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">processDirectory</span><span class="token punctuation">(</span>\n        dir<span class="token punctuation">:</span> subDir<span class="token punctuation">,</span> currentName<span class="token punctuation">:</span> currentName<span class="token punctuation">,</span> changeName<span class="token punctuation">:</span> changeName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">void</span> <span class="token function">changePubspecName</span><span class="token punctuation">(</span><span class="token class-name">PubspecYaml</span> pubspec<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token operator">?</span> changeName<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  pubspec<span class="token punctuation">.</span>customFields<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;name&#39;</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> changeName<span class="token punctuation">;</span>\n  <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;pubspec.yaml&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">writeAsStringSync</span><span class="token punctuation">(</span>pubspec<span class="token punctuation">.</span><span class="token function">toYamlString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>', 2);
const _hoisted_3 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _hoisted_3);
}
const _1726016860407_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "1726016860407.html.vue"]]);
export {
  _1726016860407_html as default
};
